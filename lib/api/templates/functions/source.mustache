#include "{{{ name }}}.hpp"

namespace fldart {
FunctionMapping _{{{ name }}}::methods[] = {
  {{# functions }}
  {"fldart::{{{ name }}}", {{{ name }}}},
  {{/ functions }}
  {NULL, NULL}
};
{{# functions }}

void {{{ name }}}(Dart_NativeArguments arguments) {
  // Local variables
  {{# args }}
  {{{ type }}} {{{ name }}};
  {{/ args }}

  Dart_EnterScope();

  // Resolve variables.
  {{# args }}
  HandleError({{{ conv }}}(HandleError(Dart_GetNativeArgument(arguments, {{{ argi }}})), &{{{ name }}}));
  {{/ args }}

  // Execute the function.
  {{{ temp }}}{{{ func }}};

  // Resolve return value,
  Dart_Handle result = {{{ retf }}};
  Dart_SetReturnValue(arguments, result);

  Dart_ExitScope();
}
{{/ functions }}
}
